#include <GL/glut.h>
#include <cmath>

float cloudOffsetX = 0.0f;
 // Starting x-position of the airplane
void reshape(int w, int h) {
    glViewport(0, 0, w, h);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    if (w > h)
        glOrtho(-1.0f * (w / float(h)), 1.0f * (w / float(h)), -1.0f, 1.0f, -1.0f, 1.0f);
    else
        glOrtho(-1.0f, 1.0f, -1.0f * (h / float(w)), 1.0f * (h / float(w)), -1.0f, 1.0f);
}



void dora(float x1,float x2)
{
     glColor3f(0.7f, 0.7f, 0.7f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.55f-x1, 0.37f);
        glVertex2f(-0.55f-x1, -0.17f);   // body
        glVertex2f(-0.57f-x2, -0.17f);
        glVertex2f(-0.57f-x2, 0.37f);
    glEnd();
}

bool isDay = true;  // true = day, false = night
// Function to draw a full circle
void drawCircle(float cx, float cy, float r, int num_segments) {
    glBegin(GL_POLYGON);
    for (int i = 0; i < num_segments; i++) {
        float theta = 2.0f * 3.1415926f * float(i) / float(num_segments);
        float x = r * cosf(theta);
        float y = r * sinf(theta);
        glVertex2f(x + cx, y + cy);
    }
    glEnd();
}

// Cloud styles
void drawCloud1(float x, float y) {
    glColor3f(1.0f, 1.0f, 1.0f);
    drawCircle(x, y, 0.05f, 100);
    drawCircle(x + 0.05f, y + 0.02f, 0.06f, 100);
    drawCircle(x + 0.10f, y, 0.05f, 100);
}

void drawCloud2(float x, float y) {
    glColor3f(1.0f, 1.0f, 1.0f);
    drawCircle(x, y, 0.05f, 100);
    drawCircle(x + 0.07f, y + 0.02f, 0.07f, 100);
    drawCircle(x + 0.15f, y, 0.05f, 100);
    drawCircle(x + 0.1f, y - 0.03f, 0.04f, 100);
}

void drawCloud3(float x, float y) {
    glColor3f(1.0f, 1.0f, 1.0f);
    drawCircle(x, y, 0.06f, 100);
    drawCircle(x + 0.04f, y + 0.05f, 0.05f, 100);
    drawCircle(x - 0.04f, y + 0.05f, 0.05f, 100);
}



// Half circles
void drawHalfCircle(float cx, float cy, float r, int num_segments) {
    glBegin(GL_POLYGON);
    glColor3f(1.0f, 1.0f, 1.0f);
    for (int i = 0; i <= num_segments; i++) {
        float theta = 3.1416f * float(i) / float(num_segments);
        float x = r * cos(theta);
        float y = r * sin(theta);
        glVertex2f(x + cx, y + cy);
    }
    glEnd();
}

void drawHalfCircle1(float cx, float cy, float r, int num_segments) {
    glBegin(GL_POLYGON);
    glColor3f(1.0f, 1.0f, 1.0f);
    for (int i = 0; i <= num_segments; i++) {
        float theta = 3.1416f * float(i) / float(num_segments);
        float x = r * cos(theta);
        float y = -r * sin(theta);
        glVertex2f(x + cx, y + cy);
    }
    glEnd();
}

void drawHalfCircle2(float cx, float cy, float r, int num_segments) {
    glBegin(GL_POLYGON);
    glColor3f(1.0f, 1.0f, 1.0f);
    for (int i = 0; i <= num_segments; i++) {
        float theta = -3.1416f / 2 + (3.1416f * float(i) / float(num_segments));
        float x = r * cosf(theta);
        float y = r * sinf(theta);
        glVertex2f(x + cx, y + cy);
    }
    glEnd();
}

void drawHalfCircle6(float cx, float cy, float r, int num_segments) {
    glBegin(GL_POLYGON);
    glColor3f(1.0f, 1.0f, 1.0f);
    for (int i = 0; i <= num_segments; i++) {
        float theta = 3.1416f * float(i) / float(num_segments);
        float x = r * cos(theta);
        float y = -r * sin(theta);
        glVertex2f(x + cx, y + cy);
    }
    glEnd();
}

void drawCloud4(float x, float y) {
    glColor3f(1.0f, 1.0f, 1.0f);
    drawCircle(x, y, 0.08f, 100);
    drawCircle(x + 0.10f, y + 0.05f, 0.08f, 100);
    drawCircle(x - 0.10f, y + 0.05f, 0.08f, 100);
    drawCircle(x + 0.15f, y - 0.05f, 0.08f, 100);
}

void drawCloud5(float x, float y) {
    glColor3f(1.0f, 1.0f, 1.0f);
    drawCircle(x, y, 0.05f, 100);
    drawCircle(x + 0.05f, y + 0.05f, 0.06f, 100);
    drawCircle(x + 0.12f, y + 0.02f, 0.05f, 100);
    drawCircle(x + 0.08f, y - 0.04f, 0.04f, 100);
    drawCircle(x - 0.05f, y + 0.03f, 0.04f, 100);
}

void display() {


if (isDay) {
        glBegin(GL_QUADS);
        glColor3f(0.5f, 0.9f, 1.0f);  // Day sky - Light blue
        glVertex2f(-2.0f, 2.0f);
        glVertex2f(2.0f, 2.0f);
        glColor3f(0.1f, 0.3f, 0.7f);  // Darker blue at the bottom
        glVertex2f(2.0f, -2.0f);
        glVertex2f(-2.0f, -2.0f);
        glEnd();
    } else {
        glBegin(GL_QUADS);
        glColor3f(0.1f, 0.1f, 0.3f);  // Night sky - Dark blue
        glVertex2f(-2.0f, 2.0f);
        glVertex2f(2.0f, 2.0f);
        glColor3f(0.0f, 0.0f, 0.1f);  // Even darker blue at the bottom
        glVertex2f(2.0f, -2.0f);
        glVertex2f(-2.0f, -2.0f);
        glEnd();
    }

    // Drawing sun/moon based on the mode
    if (isDay) {
        glColor3f(1.0f, 1.0f, 0.0f);  // Yellow color for sun
        drawCircle(1.5f, 0.8f, 0.1f, 100);  // Sun in the sky
    } else {
        glColor3f(0.8f, 0.8f, 0.8f);  // Light gray color for moon
        drawCircle(1.5f, 0.8f, 0.1f, 100);  // Moon in the sky
    }

    if (isDay) {
    } else {

        glPointSize(5);
        glBegin(GL_POINTS);
        glColor3f(0.8f, 0.8f, 0.8f);
        glVertex2f(1.f, 0.9f);
        glVertex2f(0.5f, 0.8f);
        glVertex2f(-1.f, 0.9f);
        glVertex2f(-0.5f, 0.8f);
        glVertex2f(0.1f, 0.9f);
        glVertex2f(0.0f, 0.7f);
        glVertex2f(1.8f, 0.85f);
        glVertex2f(-1.5f, 0.85f);
        glVertex2f(-1.8f, 0.7f);
        glVertex2f(-1.65f, 0.6f);
        glVertex2f(1.65f, 0.65f);
        glVertex2f(1.2f, 0.55f);
        glVertex2f(1.f, 0.6f);
        glVertex2f(-1.3f, 0.7f);
        glVertex2f(-1.05f, 0.55f);
        glVertex2f(-0.7f, 0.5f);
        glVertex2f(-.3f, 0.68f);
        glVertex2f(.4f, 0.53f);
         glEnd();
    }


    drawCircle(1.5f, 0.8f, 0.1f, 100);  // Position and radius of the sun



    // Moving clouds
    drawCloud1(-0.8f + cloudOffsetX, 0.8f);
    drawCloud2(-0.3f + cloudOffsetX, 0.7f);
    drawCloud3(0.1f + cloudOffsetX, 0.85f);
    drawCloud1(0.6f + cloudOffsetX, 0.75f);
    drawCloud2(1.0f + cloudOffsetX, 0.8f);
    drawCloud3(1.5f + cloudOffsetX, 0.7f);
  drawCloud4(-1.4f + cloudOffsetX, 0.85f); // New cloud shape 4
    drawCloud5(1.8f + cloudOffsetX, 0.85f); // New cloud shape 5
   drawCloud2(1.5f + cloudOffsetX, 0.5f);
      drawCloud2(0.1f + cloudOffsetX, 0.5f);
       drawCloud2(-1.0f + cloudOffsetX, 0.5f);

    // Draw the moon

    // Drawing sun/moon based on the mode
 glScalef(0.3f, 0.3f, 1.0f);
glPushMatrix();


    // Plane body
    glColor3f(0.9f, 0.9f, 0.9f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.7f, 0.4f);
        glVertex2f(-0.7f, -0.2f);   // body
        glVertex2f(1.4f, -0.2f);
        glVertex2f(1.4f, 0.4f);
    glEnd();

    glColor3f(0.7f, 0.7f, 0.7f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.65f, 0.37f);
        glVertex2f(-0.65f, -0.17f);   // body
        glVertex2f(-0.63f, -0.17f);
        glVertex2f(-0.63f, 0.37f);
    glEnd();

     glColor3f(0.7f, 0.7f, 0.7f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.55f, 0.37f);
        glVertex2f(-0.55f, -0.17f);   // body
        glVertex2f(-0.57f, -0.17f);
        glVertex2f(-0.57f, 0.37f);
    glEnd();

dora(-0.09,-0.08);
dora(-0.19,-0.18);
dora(-0.29,-0.28);
dora(-0.39,-0.38);
dora(-0.49,-0.48);
dora(-0.59,-0.58);
dora(-0.69,-0.68);
dora(-0.79,-0.78);
dora(-0.89,-0.88);
dora(-0.99,-0.98);
dora(-1.09,-1.08);
dora(-1.19,-1.18);
dora(-1.29,-1.28);
dora(-1.39,-1.38);
dora(-1.49,-1.48);
dora(-1.59,-1.58);
dora(-1.69,-1.68);
dora(-1.79,-1.78);
dora(-1.89,-1.88);


glPopMatrix();
glPushMatrix();
glTranslatef(2.15f, -0.0f, 0.0f);



    // Plane body
    glColor3f(0.9f, 0.4f, 0.4f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.7f, 0.4f);
        glVertex2f(-0.7f, -0.2f);   // body
        glVertex2f(1.4f, -0.2f);
        glVertex2f(1.4f, 0.4f);
    glEnd();

    glColor3f(0.7f, 0.7f, 0.7f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.65f, 0.37f);
        glVertex2f(-0.65f, -0.17f);   // body
        glVertex2f(-0.63f, -0.17f);
        glVertex2f(-0.63f, 0.37f);
    glEnd();

     glColor3f(0.7f, 0.7f, 0.7f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.55f, 0.37f);
        glVertex2f(-0.55f, -0.17f);   // body
        glVertex2f(-0.57f, -0.17f);
        glVertex2f(-0.57f, 0.37f);
    glEnd();

dora(-0.09,-0.08);
dora(-0.19,-0.18);
dora(-0.29,-0.28);
dora(-0.39,-0.38);
dora(-0.49,-0.48);
dora(-0.59,-0.58);
dora(-0.69,-0.68);
dora(-0.79,-0.78);
dora(-0.89,-0.88);
dora(-0.99,-0.98);
dora(-1.09,-1.08);
dora(-1.19,-1.18);
dora(-1.29,-1.28);
dora(-1.39,-1.38);
dora(-1.49,-1.48);
dora(-1.59,-1.58);
dora(-1.69,-1.68);
dora(-1.79,-1.78);
dora(-1.89,-1.88);

glPopMatrix();



glPushMatrix();
glTranslatef(4.3f, -0.0f, 0.0f);



    // Plane body
    glColor3f(0.9f, 0.9f, 0.0f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.7f, 0.4f);
        glVertex2f(-0.7f, -0.2f);   // body
        glVertex2f(1.4f, -0.2f);
        glVertex2f(1.4f, 0.4f);
    glEnd();

    glColor3f(0.7f, 0.7f, 0.7f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.65f, 0.37f);
        glVertex2f(-0.65f, -0.17f);   // body
        glVertex2f(-0.63f, -0.17f);
        glVertex2f(-0.63f, 0.37f);
    glEnd();

     glColor3f(0.7f, 0.7f, 0.7f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.55f, 0.37f);
        glVertex2f(-0.55f, -0.17f);   // body
        glVertex2f(-0.57f, -0.17f);
        glVertex2f(-0.57f, 0.37f);
    glEnd();

dora(-0.09,-0.08);
dora(-0.19,-0.18);
dora(-0.29,-0.28);
dora(-0.39,-0.38);
dora(-0.49,-0.48);
dora(-0.59,-0.58);
dora(-0.69,-0.68);
dora(-0.79,-0.78);
dora(-0.89,-0.88);
dora(-0.99,-0.98);
dora(-1.09,-1.08);
dora(-1.19,-1.18);
dora(-1.29,-1.28);
dora(-1.39,-1.38);
dora(-1.49,-1.48);
dora(-1.59,-1.58);
dora(-1.69,-1.68);
dora(-1.79,-1.78);
dora(-1.89,-1.88);

glPopMatrix();


glPushMatrix();
glTranslatef(6.45f, 0.0f, 0.0f);



    // Plane body
    glColor3f(0.4f, 0.4f, 0.9f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.7f, 0.4f);
        glVertex2f(-0.7f, -0.2f);   // body
        glVertex2f(1.4f, -0.2f);
        glVertex2f(1.4f, 0.4f);
    glEnd();

    glColor3f(0.7f, 0.7f, 0.7f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.65f, 0.37f);
        glVertex2f(-0.65f, -0.17f);   // body
        glVertex2f(-0.63f, -0.17f);
        glVertex2f(-0.63f, 0.37f);
    glEnd();

     glColor3f(0.7f, 0.7f, 0.7f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.55f, 0.37f);
        glVertex2f(-0.55f, -0.17f);   // body
        glVertex2f(-0.57f, -0.17f);
        glVertex2f(-0.57f, 0.37f);
    glEnd();

dora(-0.09,-0.08);
dora(-0.19,-0.18);
dora(-0.29,-0.28);
dora(-0.39,-0.38);
dora(-0.49,-0.48);
dora(-0.59,-0.58);
dora(-0.69,-0.68);
dora(-0.79,-0.78);
dora(-0.89,-0.88);
dora(-0.99,-0.98);
dora(-1.09,-1.08);
dora(-1.19,-1.18);
dora(-1.29,-1.28);
dora(-1.39,-1.38);
dora(-1.49,-1.48);
dora(-1.59,-1.58);
dora(-1.69,-1.68);
dora(-1.79,-1.78);
dora(-1.89,-1.88);

glPopMatrix();


glPushMatrix();
glTranslatef(0.45f, .61f, 0.0f);



    // Plane body
    glColor3f(0.4f, 0.4f, 0.9f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.7f, 0.4f);
        glVertex2f(-0.7f, -0.2f);   // body
        glVertex2f(1.4f, -0.2f);
        glVertex2f(1.4f, 0.4f);
    glEnd();

    glColor3f(0.7f, 0.7f, 0.7f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.65f, 0.37f);
        glVertex2f(-0.65f, -0.17f);   // body
        glVertex2f(-0.63f, -0.17f);
        glVertex2f(-0.63f, 0.37f);
    glEnd();

     glColor3f(0.7f, 0.7f, 0.7f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.55f, 0.37f);
        glVertex2f(-0.55f, -0.17f);   // body
        glVertex2f(-0.57f, -0.17f);
        glVertex2f(-0.57f, 0.37f);
    glEnd();

dora(-0.09,-0.08);
dora(-0.19,-0.18);
dora(-0.29,-0.28);
dora(-0.39,-0.38);
dora(-0.49,-0.48);
dora(-0.59,-0.58);
dora(-0.69,-0.68);
dora(-0.79,-0.78);
dora(-0.89,-0.88);
dora(-0.99,-0.98);
dora(-1.09,-1.08);
dora(-1.19,-1.18);
dora(-1.29,-1.28);
dora(-1.39,-1.38);
dora(-1.49,-1.48);
dora(-1.59,-1.58);
dora(-1.69,-1.68);
dora(-1.79,-1.78);
dora(-1.89,-1.88);

glPopMatrix();

glPushMatrix();
glTranslatef(2.6f, .61f, 0.0f);

 glColor3f(0.9f, 0.9f, 0.9f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.7f, 0.4f);
        glVertex2f(-0.7f, -0.2f);   // body
        glVertex2f(1.4f, -0.2f);
        glVertex2f(1.4f, 0.4f);
    glEnd();

    glColor3f(0.7f, 0.7f, 0.7f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.65f, 0.37f);
        glVertex2f(-0.65f, -0.17f);   // body
        glVertex2f(-0.63f, -0.17f);
        glVertex2f(-0.63f, 0.37f);
    glEnd();

     glColor3f(0.7f, 0.7f, 0.7f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.55f, 0.37f);
        glVertex2f(-0.55f, -0.17f);   // body
        glVertex2f(-0.57f, -0.17f);
        glVertex2f(-0.57f, 0.37f);
    glEnd();

dora(-0.09,-0.08);
dora(-0.19,-0.18);
dora(-0.29,-0.28);
dora(-0.39,-0.38);
dora(-0.49,-0.48);
dora(-0.59,-0.58);
dora(-0.69,-0.68);
dora(-0.79,-0.78);
dora(-0.89,-0.88);
dora(-0.99,-0.98);
dora(-1.09,-1.08);
dora(-1.19,-1.18);
dora(-1.29,-1.28);
dora(-1.39,-1.38);
dora(-1.49,-1.48);
dora(-1.59,-1.58);
dora(-1.69,-1.68);
dora(-1.79,-1.78);
dora(-1.89,-1.88);
glPopMatrix();

glPushMatrix();
glTranslatef(4.8f, .61f, 0.0f);



    // Plane body
    glColor3f(0.9f, 0.4f, 0.4f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.7f, 0.4f);
        glVertex2f(-0.7f, -0.2f);   // body
        glVertex2f(1.4f, -0.2f);
        glVertex2f(1.4f, 0.4f);
    glEnd();

    glColor3f(0.7f, 0.7f, 0.7f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.65f, 0.37f);
        glVertex2f(-0.65f, -0.17f);   // body
        glVertex2f(-0.63f, -0.17f);
        glVertex2f(-0.63f, 0.37f);
    glEnd();

     glColor3f(0.7f, 0.7f, 0.7f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.55f, 0.37f);
        glVertex2f(-0.55f, -0.17f);   // body
        glVertex2f(-0.57f, -0.17f);
        glVertex2f(-0.57f, 0.37f);
    glEnd();

dora(-0.09,-0.08);
dora(-0.19,-0.18);
dora(-0.29,-0.28);
dora(-0.39,-0.38);
dora(-0.49,-0.48);
dora(-0.59,-0.58);
dora(-0.69,-0.68);
dora(-0.79,-0.78);
dora(-0.89,-0.88);
dora(-0.99,-0.98);
dora(-1.09,-1.08);
dora(-1.19,-1.18);
dora(-1.29,-1.28);
dora(-1.39,-1.38);
dora(-1.49,-1.48);
dora(-1.59,-1.58);
dora(-1.69,-1.68);
dora(-1.79,-1.78);
dora(-1.89,-1.88);

glPopMatrix();


glPushMatrix();
glTranslatef(0.5f, 1.23f, 0.0f);



    // Plane body
    glColor3f(0.9f, 0.9f, 0.0f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.7f, 0.4f);
        glVertex2f(-0.7f, -0.2f);   // body
        glVertex2f(1.4f, -0.2f);
        glVertex2f(1.4f, 0.4f);
    glEnd();

    glColor3f(0.7f, 0.7f, 0.7f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.65f, 0.37f);
        glVertex2f(-0.65f, -0.17f);   // body
        glVertex2f(-0.63f, -0.17f);
        glVertex2f(-0.63f, 0.37f);
    glEnd();

     glColor3f(0.7f, 0.7f, 0.7f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.55f, 0.37f);
        glVertex2f(-0.55f, -0.17f);   // body
        glVertex2f(-0.57f, -0.17f);
        glVertex2f(-0.57f, 0.37f);
    glEnd();

dora(-0.09,-0.08);
dora(-0.19,-0.18);
dora(-0.29,-0.28);
dora(-0.39,-0.38);
dora(-0.49,-0.48);
dora(-0.59,-0.58);
dora(-0.69,-0.68);
dora(-0.79,-0.78);
dora(-0.89,-0.88);
dora(-0.99,-0.98);
dora(-1.09,-1.08);
dora(-1.19,-1.18);
dora(-1.29,-1.28);
dora(-1.39,-1.38);
dora(-1.49,-1.48);
dora(-1.59,-1.58);
dora(-1.69,-1.68);
dora(-1.79,-1.78);
dora(-1.89,-1.88);

glPopMatrix();

glPushMatrix();
glTranslatef(2.7f, 1.23f, 0.0f);



    // Plane body
    glColor3f(0.4f, 0.4f, 0.9f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.7f, 0.4f);
        glVertex2f(-0.7f, -0.2f);   // body
        glVertex2f(1.4f, -0.2f);
        glVertex2f(1.4f, 0.4f);
    glEnd();

    glColor3f(0.7f, 0.7f, 0.7f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.65f, 0.37f);
        glVertex2f(-0.65f, -0.17f);   // body
        glVertex2f(-0.63f, -0.17f);
        glVertex2f(-0.63f, 0.37f);
    glEnd();

     glColor3f(0.7f, 0.7f, 0.7f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.55f, 0.37f);
        glVertex2f(-0.55f, -0.17f);   // body
        glVertex2f(-0.57f, -0.17f);
        glVertex2f(-0.57f, 0.37f);
    glEnd();

dora(-0.09,-0.08);
dora(-0.19,-0.18);
dora(-0.29,-0.28);
dora(-0.39,-0.38);
dora(-0.49,-0.48);
dora(-0.59,-0.58);
dora(-0.69,-0.68);
dora(-0.79,-0.78);
dora(-0.89,-0.88);
dora(-0.99,-0.98);
dora(-1.09,-1.08);
dora(-1.19,-1.18);
dora(-1.29,-1.28);
dora(-1.39,-1.38);
dora(-1.49,-1.48);
dora(-1.59,-1.58);
dora(-1.69,-1.68);
dora(-1.79,-1.78);
dora(-1.89,-1.88);

glPopMatrix();


glPushMatrix();
glTranslatef(5.0f, 1.23f, 0.0f);
 glColor3f(0.9f, 0.9f, 0.9f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.7f, 0.4f);
        glVertex2f(-0.7f, -0.2f);   // body
        glVertex2f(1.4f, -0.2f);
        glVertex2f(1.4f, 0.4f);
    glEnd();

    glColor3f(0.7f, 0.7f, 0.7f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.65f, 0.37f);
        glVertex2f(-0.65f, -0.17f);   // body
        glVertex2f(-0.63f, -0.17f);
        glVertex2f(-0.63f, 0.37f);
    glEnd();

     glColor3f(0.7f, 0.7f, 0.7f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.55f, 0.37f);
        glVertex2f(-0.55f, -0.17f);   // body
        glVertex2f(-0.57f, -0.17f);
        glVertex2f(-0.57f, 0.37f);
    glEnd();

dora(-0.09,-0.08);
dora(-0.19,-0.18);
dora(-0.29,-0.28);
dora(-0.39,-0.38);
dora(-0.49,-0.48);
dora(-0.59,-0.58);
dora(-0.69,-0.68);
dora(-0.79,-0.78);
dora(-0.89,-0.88);
dora(-0.99,-0.98);
dora(-1.09,-1.08);
dora(-1.19,-1.18);
dora(-1.29,-1.28);
dora(-1.39,-1.38);
dora(-1.49,-1.48);
dora(-1.59,-1.58);
dora(-1.69,-1.68);
dora(-1.79,-1.78);
dora(-1.89,-1.88);
glPopMatrix();

 glColor3f(0.7f, 0.7f, 0.7f);
    glBegin(GL_POLYGON);
        glVertex2f(-6.0f, 2.6f);
        glVertex2f(-6.0f, -0.2f);   // body
        glVertex2f(-2.57f, -0.2f);
        glVertex2f(-2.57f, 2.6f);
    glEnd();

glPointSize(40);  // Set size of each star
    glBegin(GL_POINTS);
    glColor3f(0.4f, 0.4f, 1.0f);  // Light gray stars
      glVertex2f(-5.6f, 2.2f);
      glVertex2f(-5.6f + 0.5f, 2.2f);
      glVertex2f(-5.6f + 0.5f+ 0.5f, 2.2f);
      glVertex2f(-5.6f + 0.5f+ 0.5f+ 0.5f, 2.2f);
      glVertex2f(-5.6f + 0.5f+ 0.5f+ 0.5f+ 0.5f, 2.2f);
      glVertex2f(-5.6f + 0.5f+ 0.5f+ 0.5f+ 0.5f+ 0.5f, 2.2f);

      glVertex2f(-5.6f, 2.2f-0.5f);
      glVertex2f(-5.6f + 0.5f, 2.2f-0.5f);
      glVertex2f(-5.6f + 0.5f+ 0.5f, 2.2f-0.5f);
      glVertex2f(-5.6f + 0.5f+ 0.5f+ 0.5f, 2.2f-0.5f);
      glVertex2f(-5.6f + 0.5f+ 0.5f+ 0.5f+ 0.5f, 2.2f-0.5f);
      glVertex2f(-5.6f + 0.5f+ 0.5f+ 0.5f+ 0.5f+ 0.5f, 2.2f-0.5f);

      glVertex2f(-5.6f, 2.2f-0.5f-0.5f);
      glVertex2f(-5.6f + 0.5f, 2.2f-0.5f-0.5f);
      glVertex2f(-5.6f + 0.5f+ 0.5f, 2.2f-0.5f-0.5f);
      glVertex2f(-5.6f + 0.5f+ 0.5f+ 0.5f, 2.2f-0.5f-0.5f);
      glVertex2f(-5.6f + 0.5f+ 0.5f+ 0.5f+ 0.5f, 2.2f-0.5f-0.5f);
      glVertex2f(-5.6f + 0.5f+ 0.5f+ 0.5f+ 0.5f+ 0.5f, 2.2f-0.5f-0.5f);

       glVertex2f(-5.6f, 2.2f-0.5f-0.5f-0.5f);
      glVertex2f(-5.6f + 0.5f, 2.2f-0.5f-0.5f-0.5f);
      glVertex2f(-5.6f + 0.5f+ 0.5f, 2.2f-0.5f-0.5f-0.5f);
      glVertex2f(-5.6f + 0.5f+ 0.5f+ 0.5f, 2.2f-0.5f-0.5f-0.5f);
      glVertex2f(-5.6f + 0.5f+ 0.5f+ 0.5f+ 0.5f, 2.2f-0.5f-0.5f-0.5f);
      glVertex2f(-5.6f + 0.5f+ 0.5f+ 0.5f+ 0.5f+ 0.5f, 2.2f-0.5f-0.5f-0.5f);

       glVertex2f(-5.6f, 2.2f-0.5f-0.5f-0.5f-0.5f);
      glVertex2f(-5.6f + 0.5f, 2.2f-0.5f-0.5f-0.5f-0.5f);
      glVertex2f(-5.6f + 0.5f+ 0.5f, 2.2f-0.5f-0.5f-0.5f-0.5f);
      glVertex2f(-5.6f + 0.5f+ 0.5f+ 0.5f, 2.2f-0.5f-0.5f-0.5f-0.5f);
      glVertex2f(-5.6f + 0.5f+ 0.5f+ 0.5f+ 0.5f, 2.2f-0.5f-0.5f-0.5f-0.5f);
      glVertex2f(-5.6f + 0.5f+ 0.5f+ 0.5f+ 0.5f+ 0.5f, 2.2f-0.5f-0.5f-0.5f-0.5f);
glEnd();


glColor3f(0.6f, 0.6f, 0.6f);
    glBegin(GL_POLYGON);
        glVertex2f(-6.1f, 2.6f);
        glVertex2f(-6.1f, 2.8f);
        glVertex2f(-2.45f, 2.8f);
        glVertex2f(-2.45f, 2.6f);
    glEnd();

    glColor3f(0.6f, 0.6f, 0.6f);
    glBegin(GL_POLYGON);
        glVertex2f(-6.3f, -0.2f);
        glVertex2f(-6.3f, -0.8f);
        glVertex2f(6.3f, -0.8f);
        glVertex2f(6.3f, -0.2f);
    glEnd();

      glColor3f(0.5f, 0.5f, 0.5f);
    glBegin(GL_POLYGON);
        glVertex2f(-1.8f, -0.2f);
        glVertex2f(-1.8f, 2.8f);
        glVertex2f(-1.75f, 2.8f);
        glVertex2f(-1.75f, -0.2f);
    glEnd();


     glColor3f(0.5f, 0.5f, 0.5f);
    glBegin(GL_POLYGON);
        glVertex2f(-1.4f, -0.2f);
        glVertex2f(-1.4f, 2.8f);
        glVertex2f(-1.45f, 2.8f);
        glVertex2f(-1.45f, -0.2f);
    glEnd();

     glColor3f(0.5f, 0.5f, 0.5f);
    glBegin(GL_POLYGON);
        glVertex2f(-1.58f, -0.2f);
        glVertex2f(-1.58f, 2.8f);
        glVertex2f(-1.62f, 2.8f);
        glVertex2f(-1.62f, -0.2f);
    glEnd();

     glColor3f(0.5f, 0.5f, 0.5f);
    glBegin(GL_POLYGON);
        glVertex2f(1.4f, 2.75f);
        glVertex2f(1.4f, 2.8f);
        glVertex2f(-1.8f, 2.8f);
        glVertex2f(-1.8f, 2.75f);
    glEnd();

    glColor3f(0.5f, 0.5f, 0.5f);
    glBegin(GL_POLYGON);
        glVertex2f(1.5f, 2.7f);
        glVertex2f(1.5f, 2.65f);
        glVertex2f(-1.8f, 2.65f);
        glVertex2f(-1.8f, 2.7f);
    glEnd();

      glColor3f(0.5f, 0.5f, 0.5f);
    glBegin(GL_POLYGON);
        glVertex2f(1.6f, 2.55f);
        glVertex2f(1.6f, 2.6f);
        glVertex2f(-1.8f, 2.6f);
        glVertex2f(-1.8f, 2.55f);
    glEnd();

 glColor3f(0.5f, 0.5f, 0.5f);
    glBegin(GL_POLYGON);
        glVertex2f(1.4f, 2.55f);
        glVertex2f(1.4f, 2.6f);
        glVertex2f(1.6f, 2.6f);
        glVertex2f(1.6f, 2.55f);
    glEnd();

    glColor3f(0.5f, 0.5f, 0.5f);
    glBegin(GL_POLYGON);
        glVertex2f(1.6f, 2.55f);
        glVertex2f(1.35f, 2.8f);
        glVertex2f(1.45f, 2.8f);
        glVertex2f(1.65f, 2.55f);
    glEnd();

     glColor3f(0.5f, 0.5f, 0.5f);
    glBegin(GL_POLYGON);
        glVertex2f(1.6f, 2.55f);
        glVertex2f(1.35f, 2.8f);
        glVertex2f(1.45f, 2.8f);
        glVertex2f(1.65f, 2.55f);
    glEnd();

     glColor3f(0.5f, 0.5f, 0.5f);
    glBegin(GL_POLYGON);
        glVertex2f(-1.4f, 2.1f);
        glVertex2f(-1.4f, 2.15f);
        glVertex2f(-1.8f, 2.15f);
        glVertex2f(-1.8f, 2.1f);
    glEnd();

    glColor3f(0.5f, 0.5f, 0.5f);
    glBegin(GL_POLYGON);
        glVertex2f(-1.4f, 2.1f-0.5f);
        glVertex2f(-1.4f, 2.15f-0.5f);
        glVertex2f(-1.8f, 2.15f-0.5f);
        glVertex2f(-1.8f, 2.1f-0.5f);
    glEnd();

     glColor3f(0.5f, 0.5f, 0.5f);
    glBegin(GL_POLYGON);
        glVertex2f(-1.4f, 2.1f-0.5f-0.5f);
        glVertex2f(-1.4f, 2.15f-0.5f-0.5f);
        glVertex2f(-1.8f, 2.15f-0.5f-0.5f);
        glVertex2f(-1.8f, 2.1f-0.5f-0.5f);
    glEnd();

      glColor3f(0.5f, 0.5f, 0.5f);
    glBegin(GL_POLYGON);
        glVertex2f(-1.4f, 2.1f-0.5f-0.5f-0.5f);
        glVertex2f(-1.4f, 2.15f-0.5f-0.5f-0.5f);
        glVertex2f(-1.8f, 2.15f-0.5f-0.5f-0.5f);
        glVertex2f(-1.8f, 2.1f-0.5f-0.5f-0.5f);
    glEnd();

    glColor3f(0.5f, 0.5f, 0.5f);
    glBegin(GL_POLYGON);
        glVertex2f(-1.4f, 2.1f-0.5f-0.5f-0.5f-0.5f);
        glVertex2f(-1.4f, 2.15f-0.5f-0.5f-0.5f-0.5f);
        glVertex2f(-1.8f, 2.15f-0.5f-0.5f-0.5f-0.5f);
        glVertex2f(-1.8f, 2.1f-0.5f-0.5f-0.5f-0.5f);
    glEnd();

     glColor3f(0.529f, 0.808f, 0.922f);

    glBegin(GL_POLYGON);
        glVertex2f(6.4f, -0.8f);
        glVertex2f(6.4f, -5.15f);
        glVertex2f(-6.4f, -5.15f);
        glVertex2f(-6.4f, -0.8f);
    glEnd();


//ship

 glPushMatrix();

glTranslatef(-2.15f, -1.6f, 0.0f);
    // Plane body
    glColor3f(0.9f, 0.9f, 0.9f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.7f, 0.4f);
        glVertex2f(-0.7f, -0.2f);   // body
        glVertex2f(1.4f, -0.2f);
        glVertex2f(1.4f, 0.4f);
    glEnd();

    glColor3f(0.7f, 0.7f, 0.7f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.65f, 0.37f);
        glVertex2f(-0.65f, -0.17f);   // body
        glVertex2f(-0.63f, -0.17f);
        glVertex2f(-0.63f, 0.37f);
    glEnd();

     glColor3f(0.7f, 0.7f, 0.7f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.55f, 0.37f);
        glVertex2f(-0.55f, -0.17f);   // body
        glVertex2f(-0.57f, -0.17f);
        glVertex2f(-0.57f, 0.37f);
    glEnd();

dora(-0.09,-0.08);
dora(-0.19,-0.18);
dora(-0.29,-0.28);
dora(-0.39,-0.38);
dora(-0.49,-0.48);
dora(-0.59,-0.58);
dora(-0.69,-0.68);
dora(-0.79,-0.78);
dora(-0.89,-0.88);
dora(-0.99,-0.98);
dora(-1.09,-1.08);
dora(-1.19,-1.18);
dora(-1.29,-1.28);
dora(-1.39,-1.38);
dora(-1.49,-1.48);
dora(-1.59,-1.58);
dora(-1.69,-1.68);
dora(-1.79,-1.78);
dora(-1.89,-1.88);


glPopMatrix();

glColor3f(0.345f, 0.071f, 0.0075f);
    glBegin(GL_POLYGON);
        glVertex2f(3.8f, -1.8f);
        glVertex2f(3.8f, -2.0f);
        glVertex2f(3.4f, -3.0f);
        glVertex2f(-3.4f, -3.0f);
        glVertex2f(-3.8f, -2.0f);
        glVertex2f(-3.8f, -1.8f);
    glEnd();

 glColor3f(0.863f, 0.078f, 0.235f);

    glBegin(GL_POLYGON);
        glVertex2f(3.45f, -2.8f);
        glVertex2f(3.4f, -3.0f);
        glVertex2f(-3.4f, -3.0f);
        glVertex2f(-3.45f, -2.8f);
    glEnd();



glColor3f(0.545f, 0.071f, 0.0075f);
    glBegin(GL_POLYGON);
        glVertex2f(-2.5f, -1.8f);
        glVertex2f(-2.7f, -1.6f);
        glVertex2f(-3.8f, -1.6f);
        glVertex2f(-3.8f, -1.8f);
    glEnd();

glColor3f(0.545f, 0.071f, 0.0075f);
    glBegin(GL_POLYGON);
        glVertex2f(1.5f, -1.8f);
        glVertex2f(1.7f, -1.6f);
        glVertex2f(3.8f, -1.6f);
        glVertex2f(3.8f, -1.8f);
    glEnd();

    glColor3f(0.9f, 0.9f, 0.9f);
    glBegin(GL_POLYGON);
        glVertex2f(1.8f, -1.2f);
        glVertex2f(1.8f, -1.6f);
        glVertex2f(3.75f, -1.6f);
        glVertex2f(3.75f, -1.2f);
    glEnd();

     glColor3f(0.9f, 0.9f, 0.9f);
    glBegin(GL_POLYGON);
        glVertex2f(2.f, -1.2f);
        glVertex2f(2.f, -0.8f);
        glVertex2f(3.55f, -0.8f);
        glVertex2f(3.55f, -1.2f);
    glEnd();

     glColor3f(0.2f, 0.2f, 0.2f);
    glBegin(GL_POLYGON);
        glVertex2f(2.5f, -0.8f);
        glVertex2f(2.5f, 0.5f);
        glVertex2f(3.f, 0.5f);
        glVertex2f(3.f, -0.8f);
    glEnd();



    glPointSize(30);  // Set size of each star
    glBegin(GL_POINTS);
     glColor3f(0.4f, 0.4f, 1.0f);
     glVertex2f(3.2f, -1.f);
     glVertex2f(2.8f, -1.f);
     glVertex2f(2.4f, -1.f);
     glVertex2f(3.4f, -1.4f);
     glVertex2f(3.f, -1.4f);
     glVertex2f(2.6f, -1.4f);
     glVertex2f(2.2f, -1.4f);
  glEnd();




glPushMatrix();
glTranslatef(-0.8f, -1.f, 0.0f);



    // Plane body
    glColor3f(0.9f, 0.4f, 0.4f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.7f, 0.4f);
        glVertex2f(-0.7f, -0.2f);   // body
        glVertex2f(1.4f, -0.2f);
        glVertex2f(1.4f, 0.4f);
    glEnd();

    glColor3f(0.7f, 0.7f, 0.7f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.65f, 0.37f);
        glVertex2f(-0.65f, -0.17f);   // body
        glVertex2f(-0.63f, -0.17f);
        glVertex2f(-0.63f, 0.37f);
    glEnd();

     glColor3f(0.7f, 0.7f, 0.7f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.55f, 0.37f);
        glVertex2f(-0.55f, -0.17f);   // body
        glVertex2f(-0.57f, -0.17f);
        glVertex2f(-0.57f, 0.37f);
    glEnd();

dora(-0.09,-0.08);
dora(-0.19,-0.18);
dora(-0.29,-0.28);
dora(-0.39,-0.38);
dora(-0.49,-0.48);
dora(-0.59,-0.58);
dora(-0.69,-0.68);
dora(-0.79,-0.78);
dora(-0.89,-0.88);
dora(-0.99,-0.98);
dora(-1.09,-1.08);
dora(-1.19,-1.18);
dora(-1.29,-1.28);
dora(-1.39,-1.38);
dora(-1.49,-1.48);
dora(-1.59,-1.58);
dora(-1.69,-1.68);
dora(-1.79,-1.78);
dora(-1.89,-1.88);

glPopMatrix();



glPushMatrix();
glTranslatef(0.f, -1.6f, 0.0f);



    // Plane body
    glColor3f(0.9f, 0.9f, 0.0f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.7f, 0.4f);
        glVertex2f(-0.7f, -0.2f);   // body
        glVertex2f(1.4f, -0.2f);
        glVertex2f(1.4f, 0.4f);
    glEnd();

    glColor3f(0.7f, 0.7f, 0.7f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.65f, 0.37f);
        glVertex2f(-0.65f, -0.17f);   // body
        glVertex2f(-0.63f, -0.17f);
        glVertex2f(-0.63f, 0.37f);
    glEnd();

     glColor3f(0.7f, 0.7f, 0.7f);
    glBegin(GL_POLYGON);
        glVertex2f(-0.55f, 0.37f);
        glVertex2f(-0.55f, -0.17f);   // body
        glVertex2f(-0.57f, -0.17f);
        glVertex2f(-0.57f, 0.37f);
    glEnd();

dora(-0.09,-0.08);
dora(-0.19,-0.18);
dora(-0.29,-0.28);
dora(-0.39,-0.38);
dora(-0.49,-0.48);
dora(-0.59,-0.58);
dora(-0.69,-0.68);
dora(-0.79,-0.78);
dora(-0.89,-0.88);
dora(-0.99,-0.98);
dora(-1.09,-1.08);
dora(-1.19,-1.18);
dora(-1.29,-1.28);
dora(-1.39,-1.38);
dora(-1.49,-1.48);
dora(-1.59,-1.58);
dora(-1.69,-1.68);
dora(-1.79,-1.78);
dora(-1.89,-1.88);

glPopMatrix();

glutSwapBuffers();
    glFlush();
}
void update(int value) {


    cloudOffsetX -= 0.001f;
    if (cloudOffsetX < -2.5f) cloudOffsetX = 2.5f;

    glutPostRedisplay();
    glutTimerFunc(16, update, 0);
}
void toggleDayNight(unsigned char key, int x, int y) {
    if (key == 32) {  // Space key to toggle day/night
        isDay = !isDay;  // Toggle the mode
        glutPostRedisplay();  // Redraw the scene with the new mode
    }
}

// Main function
int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitWindowSize(800, 600);
    glutCreateWindow("Moving Plane and Clouds - OpenGL");
    glutDisplayFunc(display);
    glutReshapeFunc(reshape);

    glutMainLoop();
    return 0;
}

